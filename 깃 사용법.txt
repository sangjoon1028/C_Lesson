git config --global user.name ""
git config --global user.email ".com"

// 깃을 처음 시작할때
git clone https://github.com/sangjoon1028/C_Lesson.git

복습을 한다 다저장하고

// 수정한 또는 새로만든 소스 파일들을 모두 스테이징 시킨다.
git add . 

//
git commit -m "작업한 이력 커밋이름"

git log

git push origin main

// 학원에서

git pull origin main


6/5


#include <stdio.h>
#include <string.h>

int main()
{
    
    //char sz[] = { 65, 66, 67, 68, 69, 70, 71 };
    //'\0' == 0 : null terminated character(널 터미네이티드 문자)
    char sz[] = { 'A', 'B', 'C', 'D', 'E', 'F', 'G','\0'};
    // sz 배열의 크기 : 7 bytes
    // sz 배열의 길이 : 7개
    printf("sz배열의 크기 : %d bytes\n", sizeof(sz));
    printf("sz배열의 길이 : %d\n", sizeof(sz)/sizeof(char));
    
    int length = sizeof(sz) / sizeof(char);
    for (int i = 0; i < length; i++)
    {
        printf("%c", sz[i]);
    }

    printf("\n");
    //for문을 이용하여 sz배열에 있는 값들을 모두 소문자로 변경하세요
    
    for (int i = 0; i < strlen(sz); i++)
    {
        sz[i] += 32;

    }




    printf("sz : %s\n", sz);
    printf("sz 문자열의 길이 : %d\n", strlen(sz));

    //char sz2[] = { 'H','e','l','I','o',' ','W','o','r','l','d',0 };
    char sz2[] = "Hellow World";
    printf("sz2의 길이 : %d\n", strlen(sz2));
    printf("sz2의 배열의 길이 : %d\n", sizeof(sz2));
    for (int i = 0; i < strlen(sz2); i++)
    {
        printf("%c", sz2[i]);


      
    }

    //sz의 문자중 소문자를 대문자로 변경하여 출력하세요

  
    for (int i = 0; i < strlen(sz2); i++)
    {
        if (sz2[i] >= 'a' && sz[i] <= 'z') // sz[i]요소가 소문자이면...
            sz2[i] -= 32;
        
        printf("%c\n", sz2[i]); //HELLO WORLD

        char sz3[] = "안녕";
        printf("%s\n", sz3);
        printf("strlen(sz3) : %d\n", strlen(sz3));
        printf("sizeof(sz3) : %d\n", sizeof(sz3));

        return 0;


    }
      


    
    return 0;
}
////

++ #include <stdio.h>


int main()
{




	// 배열(Array)
	// 인덱싱은 배열에서 값을 가져오는 방법
	// 인덱스는 배열의 원소들의 개수 -1


	// 배열로부터 값을 가져오는 방법
	int nums[5] = { 10, 20, 30, 40, 50 };
	printf("nums 배열의 첫번쨰값 : %d\n", nums[0]);
	printf("nums 배열의 두번쨰값 : %d\n", nums[1]);
	printf("nums 배열의 다섯번쨰값 : %d\n", nums[4]);

	nums[0] = 60;

	for (int i = 0; i < 5; i++)
	{
		printf("nums[%d] = %d\n", i, nums[i]);


	}
	//
	short score[] = { 100,90,80,70 };
	// score 배열의 모든 원소들의 합계를 구하는 코드를 작성하세요
	// 총점 : xxxx 점
	// 평균 : xx.xx 점
	int total = 0;
	for (int i = 0; i < 4; i++) // i가 0부터 4보다 작은동안 i값을 1씩 증가시키면서 반복
	{
		total += score[i];
	}
		printf("총합의 점수는 %d\n", total);
		printf("평균 : %.2f 점\n", total/4.0F);

		//int nums[5] = { 10, 20, 30, 40, 50 };
		/*
		* 
		* 아래와 같이 출력되도록 코드를 작성하세요
		nums[0] : 1
		nums[0] : 2
		nums[0] : 3
		nums[0] : 4
		nums[0] : 5		
		*/
		//int nums[5] = { 10, 20, 30, 40, 50 };
		for (int i = 0; i < 5; i++)
		{
			nums[0] = i + 1;
			printf("nums[%d] : %d\n", i, nums[i]);

		
		}

	
		





	
	

	
	
	
	return 0;



} 이게 레슨10 위에가 레슨11
